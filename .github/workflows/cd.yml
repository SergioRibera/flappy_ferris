name: Build and deploy

env:
  APP_NAME: flappy_ferris
  ITCH_GAME_NAME: flappy-ferris

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-android:
    runs-on: ubuntu-latest
    container: sergioribera/cargo-apk:latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate Env Variables
        run: |
          echo "PACKAGE_NAME=$(cat Cargo.toml | grep -e '^package_name = ' | cut -d' ' -f3 | sed 's/\"//g')" >> $GITHUB_ENV
          echo "VERSION=$(cat Cargo.toml | grep -e '^version = ' | cut -d' ' -f3 | sed 's/\"//g')" >> $GITHUB_ENV
          echo "VERSION_NAME=$(cat Cargo.toml | grep -e '^version_name = ' | cut -d' ' -f3 | sed 's/\"//g')" >> $GITHUB_ENV
          echo "VERSION_CODE=$(cat Cargo.toml | grep -e '^version_code = ' | cut -d' ' -f3 | sed 's/\"//g')" >> $GITHUB_ENV
          echo "{{ secrets.KEYSTORE }}"
          echo "{{ secrets.KEYSTORE }}" | base64 --decode > ${{ env.APP_NAME }}.keystore
      # Start to build
      - name: build apk
        run: cargo quad-apk build --release --nosign
      - name: Sign APK
        run: |
          echo {{ secrets.KEYSTORE_PASSWORD }} | apksigner sign --ks ${{ env.APP_NAME }}.keystore --ks-key-alias ${{ env.APP_NAME }} target/android-artifacts/release/apk/${{ env.APP_NAME }}.apk
      - name: Rename APK
        run: |
          cp target/android-artifacts/release/apk/${{ env.APP_NAME }}.apk ${{ env.APP_NAME }}${{ env.VERSION }}.apk
      - name: Upload to artifacks
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.APP_NAME }}${{ env.VERSION }}.apk
      - name: Upload to Playstore
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.sergioribera.${{ env.APP_NAME }}
          releaseFiles: ${{ env.APP_NAME }}${{ env.VERSION }}.apk
          track: alpha
          status: inProgress
          inAppUpdatePriority: 2
          userFraction: 0.7
          whatsNewDirectory: distribution/whatsnew

  build-pc:
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable]
        platform:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            deployVar: windows
            ext: ".exe"
            setup_ext: ".bat"
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            deployVar: linux
            ext: ""
            setup_ext: ".sh"
          - target: x86_64-apple-darwin
            os: macos-latest
            deployVar: osx
            ext: ""
            setup_ext: ".sh"

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v2
      - name: install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target }}

      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-index-
      - name: build release
        run: cargo build --release --target ${{ matrix.platform.target }}
      - name: Rename build
        run: |
          cp target/${{ matrix.platform.target }}/release/${{ env.APP_NAME }}${{ matrix.platform.ext }} ${{ env.APP_NAME }}_${{ matrix.platform.target }}${{ matrix.platform.ext }}
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.APP_NAME }}_${{ matrix.platform.target }}${{ matrix.platform.ext }}
      - name: Upload to Itch.io
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: ${{ matrix.deployVar }}
          ITCH_GAME: ${{ env.ITCH_GAME_NAME }}
          ITCH_USER: sergioribera
          PACKAGE: ${{ env.APP_NAME }}_${{ matrix.platform.target }}${{ matrix.platform.ext }}
